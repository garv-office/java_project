What is next? (5th day)
==============
Quick recap:

what we have done already:
	Java collection
	
	What is Generics?
		java 5:
		is to provide type safty to the data
		and Generics is compile time funda
		What is PECS (Producer Extends Consumer Super)?
		extends: upper bound
		super


day 5 new topics:
=============
	Java 8
	=======
	=> Introduction to java 8, Why i should care for it?
	=> functional interface 
	=> Lambda expressions
	=> diff bw ann inner class vs lambda expression
		(lam exp == method ref)
	=> performance 
		https://www.infoq.com/articles/Java-8-Lambdas-A-Peek-Under-the-Hood
	=> Passing code with behavior parameterization
	=> introduction to stream processing
	=> functional interfaces defined in Java 8
	=> Working with streams details
	=> Primitive stream specializations
	=> Optionals
	=> Collecting data with streams


What to do next?

refer https://www.youtube.com/watch?v=5IJG483LIjk&t=4054s

intro to jdbc
=============

java app ------------------------- db
			driver
			vendor: maven site
			mysql jar
			
			
hello world:
-----------
1. datbase banaya
			table banaya
 we have added few records
 
 create database sunlife;

create table emp(id int not null primary key auto_increment,
 name varchar(100) not null, salary double not null);

select * from emp;

insert into emp(name, salary) values('raj',6000);


2. jdbc hello world:
----------------------
 //load the driver
 
 //Connection object
 
 Statemnt vs PreparedSt vs CallableStatement 
 
 Statemnt stmt= conn.createStatement();
 
 ResultSet rs=stmt.exeuteQuery();
 
 while(rs.next()){
 
 }
 connection.close();
 
 Connection connection =null;
		try {
			 
			connection=	
					DriverManager
					.getConnection("jdbc:mysql://localhost:3306/sunlife", "root", "root");

			// Statement vs PreparedStatement vs CallableStatement
			Statement stmt = connection.createStatement();
			ResultSet rs = stmt.executeQuery("select * from emp");
			while (rs.next()) {
				System.out.println(rs.getInt(1) + ": " +
							rs.getString(2) + ": " + rs.getDouble(3));
			}
		} catch (SQLException ex) {
			System.out.println(ex.getMessage());
		}finally {
			try {
				connection.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

 
 
 step 3: connection factory with prop file
  
 

jdbc.driver=com.mysql.cj.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/busycoder_db
jdbc.username=root
jdbc.password=root


 step 4: add
 
 step 5: update
 
 step 6: delete
 
 
 step 7: 3 tier arch
 controller layer --------- service layer ----------- dao ---------db
 
 dao
 dto:
 
 
 
 
 
 


on youtube:
https://www.youtube.com/playlist?list=PLv2-IhRmhbyS1HDuE0XR6UMJr7Wlvx1CC


day 6: threads
----------------

end of day : mcq test 15
